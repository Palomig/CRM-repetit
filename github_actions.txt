name: Deploy to Timeweb

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
      
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.6'
        
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: ‚úÖ Run tests
      run: |
        python manage.py check
        # python manage.py test  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∫–æ–≥–¥–∞ –±—É–¥—É—Ç —Ç–µ—Å—Ç—ã
        
    - name: üîê Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        
    - name: üöÄ Deploy to server
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
      run: |
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ (–∏—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω–æ–µ)
        tar -czf deploy.tar.gz \
          --exclude='venv' \
          --exclude='env' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='db.sqlite3' \
          --exclude='.git' \
          --exclude='staticfiles' \
          --exclude='media' \
          --exclude='.env' \
          --exclude='node_modules' \
          tutor_crm/ apps/ templates/ static/ manage.py requirements.txt
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        scp deploy.tar.gz $SSH_USER@$SSH_HOST:~/
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        ssh $SSH_USER@$SSH_HOST << 'ENDSSH'
          set -e
          
          # Backup —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
          if [ -d "~/public_html/tutor_crm" ]; then
            mv ~/public_html/tutor_crm ~/public_html/tutor_crm_backup_$(date +%Y%m%d_%H%M%S)
          fi
          
          # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
          cd ~/public_html
          tar -xzf ~/deploy.tar.gz
          rm ~/deploy.tar.gz
          
          # –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
          source ~/venv/bin/activate
          cd ~/public_html/tutor_crm
          pip install -q -r requirements.txt
          
          # –ú–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å—Ç–∞—Ç–∏–∫–∞
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
          touch ~/public_html/wsgi.py
          
          echo "‚úÖ Deploy completed successfully!"
        ENDSSH
        
    - name: üßπ Cleanup
      if: always()
      run: |
        rm -f deploy.tar.gz
        rm -f ~/.ssh/id_rsa
        
    - name: üìß Notify on failure
      if: failure()
      run: echo "‚ùå Deploy failed! Check logs."